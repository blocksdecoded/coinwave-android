ext {
    versions = [
            support         : "28.0.0",
            androidx        : "1.0.0",
            constraint      : "1.1.3",
            coroutine       : "1.0.1",
            okHttp          : "3.10.0",
            retrofit        : '2.5.0',
            koin            : '1.0.2',
            butterKnife     : '10.0.0',
            rxJava          : '2.2.7',
            rxKotlin        : '2.2.0',
            rxAndroid       : '2.1.1',
            traceur         : '1.0.1',
            timber          : '4.7.0',
            glide           : '4.9.0',
            swipeback       : '1.1.0',

            espresso        : '3.0.1',
            testRunner      : '1.0.1',
            hamcrest        : '1.4-atlassian-1',
            restMock        : '0.3.1',
            mockito         : '2.18.0',
            junit           : '4.12',
            robolectric     : '3.8',
            assertj         : '1.2.0',
            powerMock       : '1.6.6',
            leakcanary      : '1.6.3',
            multiDex        : '1.0.3',
            mockitoKotlin   : '1.5.0'
    ]

    mockito = [mockito: "org.mockito:mockito-core:$versions.mockito"]
    junit = [junit: "junit:junit:$versions.junit"]

    coroutineDeps = [
            core    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine",
            android : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
    ]

    supportDeps = [
            cardView         : "com.android.support:cardview-v7:$versions.support",
            appcompatV7      : "com.android.support:appcompat-v7:$versions.support",
            design           : "com.android.support:design:$versions.support",
            recyclerView     : "com.android.support:recyclerview-v7:$versions.support",
            gridLayout       : "com.android.support:gridlayout-v7:$versions.support",
            multiDex         : "com.android.support:multidex:$versions.multiDex",
            constraint       : "androidx.constraintlayout:constraintlayout:$versions.constraint",
            browser          : "androidx.browser:browser:$versions.androidx"
    ]

    viewModel = [
            extensions       : "androidx.lifecycle:lifecycle-extensions:2.1.0-alpha04",
            viewmodel        : "androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0"
    ]

    rxJava = [
            rxAndroid        : "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid",
            rxJava           : "io.reactivex.rxjava2:rxjava:$versions.rxJava",
            rxKotlin         : "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin",
            traceur          : "com.tspoon.traceur:traceur:$versions.traceur"
    ]

    retrofit = [
            retrofit         : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            rxAdapter        : "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit",
            gsonConverter    : "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    ]

    koin = [
            android          : "org.koin:koin-android:$versions.koin",
            viewModel        : "org.koin:koin-androidx-viewmodel:$versions.koin"
    ]

    okHttp = [
            logger  : "com.squareup.okhttp3:logging-interceptor:$versions.okHttp",
            okhttp  : "com.squareup.okhttp3:okhttp:$versions.okHttp"
    ]

    onlyDebug = [
            chuck              : "com.readystatesoftware.chuck:library:1.1.0",
            leakCannary        : "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary",
            leakCanaryFragment : "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakcanary"
    ]

    onlyRelease = [
            chuckNoOp       : 'com.readystatesoftware.chuck:library-no-op:1.1.0',
            noOpLeakCannary : "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
    ]

    unitTest = [
            harcrestCore        : "org.hamcrest:hamcrest-core:$versions.hamcrest",
            harmcrestLib        : "org.hamcrest:hamcrest-library:$versions.hamcrest",
            hamcrestIntegration : "org.hamcrest:hamcrest-integration:$versions.hamcrest",
            robolectric         : "org.robolectric:robolectric:$versions.robolectric",
            supportAnnotation   : "com.android.support:support-annotations:$versions.support",
            restMock            : "com.github.andrzejchm.RESTMock:android:$versions.restMock",
            assertj             : "com.squareup.assertj:assertj-android:$versions.assertj",
            kotlinTest          : "org.jetbrains.kotlin:kotlin-test:$kotlin_version",
            kotlinJunit         : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            mockitoKotlin       : "com.nhaarman:mockito-kotlin:$versions.mockitoKotlin",
            koin                : "org.koin:koin-test:$versions.koin"
    ] + junit + mockito

    timber = "com.jakewharton.timber:timber:$versions.timber"
    sherlock = "com.github.ajitsing:sherlock:$versions.sherlock"

    butterKnife = "com.jakewharton:butterknife:$versions.butterKnife"
    butterKnifeCompiler = "com.jakewharton:butterknife-compiler:$versions.butterKnife"

    swipeback = "me.imid.swipebacklayout.lib:library:$versions.swipeback"
    glide = "com.github.bumptech.glide:glide:$versions.glide"
    glideCompiler = "com.github.bumptech.glide:compiler:$versions.glide"
    glideOkhttp = "com.github.bumptech.glide:okhttp3-integration:$versions.glide"
    mpChart = "com.github.PhilJay:MPAndroidChart:3.0.3"
    androidSvg = "com.caverock:androidsvg-aar:1.3"
    observableScroll = 'com.github.ksoichiro:android-observablescrollview:1.6.0'

    supportLibs = supportDeps.values()
    networkLibs = retrofit.values() + okHttp.values()
    rxJavaLibs = rxJava.values()
    coroutineLibs = coroutineDeps.values()

    otherLibs = [viewModel.values(), butterKnife, timber, glide, swipeback, koin.values(), mpChart, androidSvg, observableScroll]

    debugLibs = onlyDebug.values()
    releaseLibs = onlyRelease.values()

    annotationProcessorLibs = [butterKnifeCompiler, glideCompiler]

    unitTestLibs = unitTest.values()
}